<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.daviszhao.rules.easyrule.rules.mvelindb.dao.RuledefineDao">
    <resultMap id="RuleResult" type="com.github.daviszhao.rules.easyrule.rules.mvelindb.models.RuleDefine">
        <id column="rulename" jdbcType="VARCHAR" property="rulename"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="prority" jdbcType="INTEGER" property="prority"/>
        <collection property="actions" column="rulename"
                    select="selectActionByRule"
                    fetchType="eager"/>
        <collection property="conditions" column="rulename"
                    select="selectConditionByRule"
                    fetchType="eager"/>
    </resultMap>
    <resultMap id="ActionResult" type="com.github.daviszhao.rules.easyrule.rules.mvelindb.models.Action">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="rulename" jdbcType="VARCHAR" property="rulename"/>
        <result column="action" jdbcType="VARCHAR" property="action"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
    </resultMap>
    <resultMap id="ConditionResult" type="com.github.daviszhao.rules.easyrule.rules.mvelindb.models.Condition">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="rulename" jdbcType="VARCHAR" property="rulename"/>
        <result column="condition" jdbcType="VARCHAR" property="condition"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
    </resultMap>
    <sql id="Rule_Column_List">
        rulename, memo, prority
    </sql>
    <sql id="Action_Column_List">
        id, rulename, `action`, memo
    </sql>
    <sql id="Condition_Column_List">
        id, rulename, `condition`, memo
    </sql>
    <select id="selectActionByRule" parameterType="string" resultMap="ActionResult">
        select
        <include refid="Action_Column_List"/>
        from actions
        where rulename=#{rulename}
    </select>
    <select id="selectConditionByRule" parameterType="string" resultMap="ConditionResult">
        select
        <include refid="Condition_Column_List"/>
        from conditions
        where rulename=#{rulename}
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="RuleResult">
        select
        <include refid="Rule_Column_List"/>
        from ruledefine
        where rulename = #{rulename,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from ruledefine
        where rulename = #{rulename,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="rulename" keyProperty="rulename"
            parameterType="com.github.daviszhao.rules.easyrule.rules.mvelindb.models.RuleDefine"
            useGeneratedKeys="true">
        insert into ruledefine (memo, prority)
        values (#{memo,jdbcType=VARCHAR}, #{prority,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="rulename" keyProperty="rulename"
            parameterType="com.github.daviszhao.rules.easyrule.rules.mvelindb.models.RuleDefine"
            useGeneratedKeys="true">
        insert into ruledefine
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memo != null">
                memo,
            </if>
            <if test="prority != null">
                prority,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memo != null">
                #{memo,jdbcType=VARCHAR},
            </if>
            <if test="prority != null">
                #{prority,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.github.daviszhao.rules.easyrule.rules.mvelindb.models.RuleDefine">
        update ruledefine
        <set>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="prority != null">
                prority = #{prority,jdbcType=INTEGER},
            </if>
        </set>
        where rulename = #{rulename,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.github.daviszhao.rules.easyrule.rules.mvelindb.models.RuleDefine">
        update ruledefine
        set memo = #{memo,jdbcType=VARCHAR},
        prority = #{prority,jdbcType=INTEGER}
        where rulename = #{rulename,jdbcType=VARCHAR}
    </update>
    <select id="loadall" resultMap="RuleResult">
        select
        <include refid="Rule_Column_List"/>
        from ruledefine
    </select>
</mapper>